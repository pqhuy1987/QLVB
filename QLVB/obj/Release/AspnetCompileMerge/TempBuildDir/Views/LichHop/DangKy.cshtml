
@{
    IEnumerable<QLVB.Models.PhongHop> lstPhongHop = ViewBag.lstPhongHop;

    if (Session["DangNhap"] != null)
    {
        QLVB.Models.NhanVien nv = (QLVB.Models.NhanVien)Session["DangNhap"];
    }

    ViewBag.Title = "Lịch họp";
    Layout = "~/Views/Shared/_NguoiDung.cshtml";

    int iMaNhanVien = -1;

    if (Session["DangNhap"] != null)
    {
        QLVB.Models.NhanVien nv = (QLVB.Models.NhanVien)Session["DangNhap"];
        iMaNhanVien = nv.Id;
    }
    if (HttpContext.Current.User.IsInRole("UPDATE-LICH"))
    {
        iMaNhanVien = 0;
    }
}

 @Html.Hidden("IdDangNhap", iMaNhanVien)

<div class="lich-tren index-trai-duoi " >
    <div class="div-title">
        <span class="span-title">
            Lịch họp
        </span>
    </div>
    <div class="clearfix"></div>
    @ViewBag.abc
    <div id="team-schedule">
        <div id="people">
            @foreach (var item in lstPhongHop)
            {
                <div class="hop-ds-phong">
                    <input hidden name="phong" type="radio" value="@item.Id"> @item.Name
                </div>
            }
        </div>
    </div>
    <div class="clearfix"></div>
    <script id="editor" type="text/x-kendo-template">
        <h3>Edit meeting</h3>
        <p>
            <label>Title: <input name="title" /></label>
        </p>
        <p>
            <label>Start: <input data-role="datetimepicker" name="start" /></label>
        </p>
        <p>
            <label>End: <input data-role="datetimepicker" name="end" /></label>
        </p>
    </script>

    @(Html.Kendo().Scheduler<QLVB.Models.TaskViewModel>()
        .Name("scheduler")
        .Date(DateTime.Now)
        .StartTime(7, 30, 00)
            .EndTime(19, 30, 00)
            .AllDaySlot(false)
        .Views(views =>
        {

            views.DayView();
            views.WeekView(weekView => weekView.Selected(true));
            //views.WorkWeekView(workWeekView => workWeekView.Selected(true));
            views.MonthView();
            //views.AgendaView();
            //views.TimelineView();
        })
        .Timezone("Etc/UTC")
        //.Resources(resource =>
        //{
        //    resource.Add(m => m.OwnerID)
        //        .Title("Phòng họp")
        //        .DataTextField("Text")
        //        .DataValueField("Value")

        //        .BindTo(lstSelect);
        //})
        .DataSource(d => d
            .Model(m =>
            {
                m.Id(f => f.TaskID);
                m.RecurrenceId(f => f.RecurrenceID);
            })
            .Read("Read", "LichHop")
            .Create("Create", "LichHop")
            .Destroy("Destroy", "LichHop")
            .Update("Update", "LichHop")
            .Filter(filters =>
            {
                filters.Add(model => model.OwnerID).IsEqualTo(lstPhongHop.FirstOrDefault().Id);
            })
        ).WorkDayStart(7, 00, 00).WorkDayEnd(18, 00, 00).Events(events => events
               .Add("scheduler_add")
               .Save("scheduler_save")
               .Resize("scheduler_resize")
               .ResizeEnd("scheduler_resizeEnd")
               .Move("scheduler_move")
               .MoveEnd("scheduler_moveEnd")
               .Remove("scheduler_remove")
    ).EventTemplate("#:kendo.toString(start, 'HH:mm')# - #: title #")
    )

</div>
<script type="text/javascript">

    $('.hop-ds-phong:first').each(function () {
        $(this).addClass('phong-active');   
    });
    $('.hop-ds-phong').click(function () {
        $('.hop-ds-phong').removeClass('phong-active');
        $(this).find('input:radio').prop('checked', true);
        $(this).addClass('phong-active');

        $('#loading_gif').show();
        $.ajax({
            url: '@Url.Action("luu_ss_phong_ajax", "LichHop")',
            type: "POST",
            data:{phong: $(this).find('input:radio').val()},
            success: function (result) {
                if (result == 1)
                    $('#loading_gif').hide();
                else
                    alert("Không lấy được phòng");
            },
        });
    });
    $(function () {
        $("#people").click(function (e) {
            var checked = $.map($("#people :checked"), function (checkbox) {
                return parseInt($(checkbox).val());
            });

            var filter = {
                logic: "or",
                filters: $.map(checked, function (value) {
                    return {
                        operator: "eq",
                        field: "OwnerID",
                        value: value
                    };
                })
            };

            var scheduler = $("#scheduler").data("kendoScheduler");
            scheduler.dataSource.filter(filter);
            scheduler.dataSource.read();
        });

    })

    $('body').delegate('.k-scheduler', 'click', function () {
       // $('.k-window').find(".k-edit-form-container").find('.k-edit-field:first').remove();
        //$('.k-window').find(".k-edit-form-container").prepend('<div data-container-for="title" class="k-edit-field"><input type="text" class="k-input k-textbox" name="title" title="Title" data-bind="value:title"></div>');
        //$('.k-edit-field').find(".k-textbox").val("abc");
   
      
    });

    setInterval(function () {
        $('.k-event').each(function () {
            if ($(this).find(".k-event-actions:first").html() != "") {
                $(this).addClass("acctive");
            }
        });
    }, 0)
 
</script>

<script>


    function scheduler_resize(e) {
        if ( attendeeIsOccupied(e.start, e.end, e.event, e.resources)) {
            this.wrapper.find(".k-marquee-color").addClass("invalid-slot");
            e.preventDefault();
        }
    }

    //phan quyen khi keo time ket thuc
    function scheduler_resizeEnd(e) {

        var idDN = $('#IdDangNhap').val();
        var idCreate = e.event.CreatedUserId;
        if (idDN != 0) {
            if (idCreate != null && idDN != idCreate) {
                e.preventDefault();
                alert('BẠN KHÔNG CÓ QUYỀN CHỈNH SỬA LỊCH NÀY !');
            }
        }
    }

    function scheduler_move(e) {
        if (attendeeIsOccupied(e.start, e.end, e.event, e.resources)) {
            this.wrapper.find(".k-event-drag-hint").addClass("invalid-slot");
        }
    }

    //phan quyen khi di chuyen ket thuc
    function scheduler_moveEnd(e) {
        if (!checkAvailability(e.start, e.end, e.event, e.resources)) {
            e.preventDefault();
        }

        var idDN = $('#IdDangNhap').val();
        var idCreate = e.event.CreatedUserId;
        if (idDN != 0) {
            if (idCreate != null && idDN != idCreate) {
                e.preventDefault();
                alert('BẠN KHÔNG CÓ QUYỀN CHỈNH SỬA LỊCH NÀY !');
            }
        }
    }

    function scheduler_add(e) {

        if (!checkAvailability(e.event.start, e.event.end, e.event)) {
            e.preventDefault();
        }

    }
    // phan quyen save edit
    function scheduler_save(e) {

        var Nstart = e.event.start.getDate() + "/" + (e.event.start.getMonth() + 1) + "/" + e.event.start.getFullYear() + " " + e.event.start.getHours() + ":" + e.event.start.getMinutes();
        var Nend = e.event.end.getDate() + "/" + (e.event.end.getMonth() + 1) + "/" + e.event.end.getFullYear() + " " + e.event.end.getHours() + ":" + e.event.end.getMinutes();

      
            $.ajax({
                url: '@Url.Action("KiemTraTrung_ajax", "LichHop")',
                type: "POST",
                data: { start: Nstart, end: Nend, lichID: e.event.TaskID, recurrenceRule: e.event.recurrenceRule },
                success: function (result) {

                    if (result != "1") {
                        alert('Giờ họp đã bị trùng với ngày '+result+' !');
                        var scheduler = $("#scheduler").data("kendoScheduler");
                        scheduler.dataSource.read();
                    }
                },
            });
       


        if (!checkAvailability(e.event.start, e.event.end, e.event)) {
            e.preventDefault();
        }

        if ($('.k-textbox').val()=="")
        {
            e.preventDefault();
            alert('Title không được trống !');
        }

        var idDN = $('#IdDangNhap').val();
        var idCreate = e.event.CreatedUserId;
        if (idDN != 0) {
            if (idCreate != null && idDN != idCreate) {
                e.preventDefault();
                alert('BẠN KHÔNG CÓ QUYỀN CHỈNH SỬA LỊCH NÀY !');
            }
        }
    }
    // phan quyen xoa
    function scheduler_remove(e) {

        var idDN = $('#IdDangNhap').val();
        var idCreate = e.event.CreatedUserId;
        if (idDN != 0) {
            if (idCreate != null && idDN != idCreate) {
                e.preventDefault();
                alert('BẠN KHÔNG CÓ QUYỀN XÓA LỊCH NÀY !');
            }
        }
    }

    function occurrencesInRangeByResource(start, end, resourceFieldName, event, resources) {
        var scheduler = $("#scheduler").getKendoScheduler();

        var occurrences = scheduler.occurrencesInRange(start, end);

        var idx = occurrences.indexOf(event);
        if (idx > -1) {
            occurrences.splice(idx, 1);
        }

        event = $.extend({}, event, resources);

        return filterByResource(occurrences, resourceFieldName, event[resourceFieldName]);
    }

    function filterByResource(occurrences, resourceFieldName, value) {
        var result = [];
        var occurrence;

        for (var idx = 0, length = occurrences.length; idx < length; idx++) {
            occurrence = occurrences[idx];
            var resourceValue = occurrence[resourceFieldName];

            if (resourceValue === value) {
                result.push(occurrence);
            } else if (resourceValue instanceof kendo.data.ObservableArray) {
                if (value) {
                    for (var i = 0; i < value.length; i++) {
                        if (resourceValue.indexOf(value[i]) != -1) {
                            result.push(occurrence);
                            break;
                        }
                    }
                }
            }
        }
        return result;
    }

    function attendeeIsOccupied(start, end, event, resources) {
        var occurrences = occurrencesInRangeByResource(start, end, "Attendees", event, resources);
        if (occurrences.length > 0) {
            return true;
        }
        return false;
    }



    function checkAvailability(start, end, event, resources) {
        if (attendeeIsOccupied(start, end, event, resources)) {
            setTimeout(function () {
                alert("Giờ họp đã bị trùng hãy kiểm tra lại");
            }, 0);

            return false;
        }

        return true;
    }


</script>
<style>

  /* tat cot sunday
      table.k-scheduler-weekview .k-scheduler-header th:first-child, table.k-scheduler-weekview .k-scheduler-table td:first-child
   {
       display:none;
   }*/
    .invalid-slot {
        background: red !important;
        cursor: no-drop;
    }
    .k-event, .k-task-complete
    {
        background-color: rgb(81, 160, 237);
        border-color: rgb(81, 160, 237);
    }

    .acctive
    {
       background-color: #DB5461;
       border-color: #DB5461;
    }

/*tat nut allday */
    [data-container-for="isAllDay"], [for="isAllDay"], [data-offset-index="1"],[data-offset-index="3"],[data-offset-index="4"]  {
    display:none;
}
/* tat check sunday
    .k-check:first-child
    {
        display:none;
    }*/
/* tat repeat*/
.k-recur-view .k-edit-label:nth-of-type(1), .k-recur-view .k-edit-field:nth-of-type(2), .k-recur-view .k-edit-label:nth-of-type(5), .k-recur-view .k-edit-field:nth-of-type(6)
{
    display:none;
}
</style>